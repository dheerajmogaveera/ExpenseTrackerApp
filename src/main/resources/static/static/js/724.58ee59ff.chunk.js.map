{"version":3,"file":"static/js/724.58ee59ff.chunk.js","mappings":"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","sources":["services/ReportUtils.js","components/Report.js"],"sourcesContent":["export const reportDataProcessing = (\n  data,\n  SetResponse,\n  setChartLabel,\n  setChartData,\n  setExpensesByDate,\n) => {\n  SetResponse(data)\n  const label = []\n  const value = []\n  const value1 = []\n  for (var key in data.amountByDate) {\n    label.push(key)\n  }\n  label.sort()\n  label.forEach((val) => {\n    value.push(data.amountByDate[val])\n    value1.push(data.numberOfExpensesByDays[val])\n  })\n  setChartLabel(label)\n  setChartData(value)\n  setExpensesByDate(value1)\n}\nexport const dateFormatter = (start, end) => {\n  let startDate =\n    Number(start['$M']) + 1 > 9\n      ? Number(start['$M']) + 1\n      : '0' + (Number(start['$M']) + 1)\n  let endDate =\n    Number(end['$M']) + 1 > 9\n      ? Number(end['$M']) + 1\n      : '0' + (Number(end['$M']) + 1)\n  startDate = start['$D'] + '-' + startDate + '-' + start['$y']\n  endDate = end['$D'] + '-' + endDate + '-' + end['$y']\n  return [startDate, endDate]\n}\n","import {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport {\n  ArcElement,\n  BarElement,\n  CategoryScale,\n  Chart as ChartJS,\n  Legend,\n  LinearScale,\n  Title,\n  Tooltip,\n} from 'chart.js'\nimport { useContext, useRef, useState } from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport {\n  generateReport,\n  generateReportForCustomRange,\n} from '../services/ExpenseTrackerApiService'\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers'\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs'\nimport { dateFormatter, reportDataProcessing } from '../services/ReportUtils'\nimport ExpenseThemeContext from '../context/ThemeContext'\nimport { color } from '@mui/system'\nimport \"../css/Expenses.css\"\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n)\nconst Report = () => {\n  const [chartLabel, setChartLabel] = useState([])\n  const [chartData, setChartData] = useState([])\n  const [expensesByDate, setExpensesByDate] = useState([])\n  const [response, SetResponse] = useState({})\n  const [value, setValue] = useState(null)\n  const customDate = useRef()\n  const data1 = {\n    labels: chartLabel,\n    datasets: [\n      {\n        label: 'Expense Amount',\n        backgroundColor: '#d64161',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: chartData,\n      },\n    ],\n  }\n  const startDate = useRef()\n  const data2 = {\n    labels: chartLabel,\n    datasets: [\n      {\n        label: 'No Of Expenses',\n        backgroundColor: '#6b5b95',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: expensesByDate,\n      },\n    ],\n  }\n\n  const [range, setRange] = useState('')\n  const [start, setStart] = useState(null)\n  const [end, setEnd] = useState(null)\n  const handleReportGeneration = (event) => {\n    if (range === 'week' || range === 'month') {\n      generateReport(range)\n        .then((data) => {\n          return data.json()\n        })\n        .then((data) =>\n          reportDataProcessing(\n            data,\n            SetResponse,\n            setChartLabel,\n            setChartData,\n            setExpensesByDate,\n          ),\n        )\n    } else {\n      generateCustomReport()\n    }\n  }\n\n  const generateCustomReport = () => {\n    if (start !== null && end !== null) {\n      const [startDate, endDate] = dateFormatter(start, end)\n      generateReportForCustomRange('custom', startDate, endDate)\n        .then((data) => {\n          return data.json()\n        })\n        .then((data) =>\n          reportDataProcessing(\n            data,\n            SetResponse,\n            setChartLabel,\n            setChartData,\n            setExpensesByDate,\n          ),\n        )\n    }\n  }\nconst context=useContext(ExpenseThemeContext)\n  return (\n    <div>\n      <FormControl sx={{ width: '30%' }}>\n        <InputLabel id=\"demo-simple-select-label\">Range</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={range}\n          label=\"Age\"\n          onChange={(event) => {\n            {\n              if (event.target.value === 'custom')\n                customDate.current.style.display = 'block'\n              else customDate.current.style.display = 'none'\n              setRange(event.target.value)\n            }\n          }}\n        >\n          <MenuItem value={'week'}>Week</MenuItem>\n          <MenuItem value={'month'}>Month</MenuItem>\n          <MenuItem value={'custom'}>Custom</MenuItem>\n        </Select>\n      </FormControl>\n\t\t  <Button variant={'contained'} onClick={handleReportGeneration}\n\t\t\tclassName={context.theme===\"Dark\"?\"Dark_Button\":\"Normal\"}\n\t\t  >\n        Go\n      </Button>\n      <h1>{value}</h1>\n      <br />\n      <br />\n      <div ref={customDate} style={{ display: 'none' }}>\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Start Date\"\n            value={start}\n            onChange={(val) => {\n              setStart(val)\n              console.log('Custom Report')\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"End Date\"\n            value={end}\n            onChange={(val) => {\n              setEnd(val)\n            }}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n      </div>\n      <br />\n      <div\n        style={{\n          height: '45%',\n          width: '45%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Bar\n\t\t\t\t  data={data1}\n\t\t\t\t\n          options={{\n            plugins: {\n              title: {\n                display: true,\n                text: 'Average amount per day',\n                fontSize: 20,\n                fontWeight: 'bold',\n              },\n\n              legend: {\n                display: true,\n\t\t\t\t  position: 'right',\n\t\t\t\n              },\n\t\t\t  },scales: {\n\t\t\t\t\t\t  y: {\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t  ticks: {\n\t\t\t\t\t\t\t\t  color: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t  index: {\n\t\t\t\t\t\t\t\t  fontColor: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t  grid: {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t color: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t  },\n\t\t\t\t\t\t   x: {\n\t\t\t\t\t\t\t  ticks: {\n\t\t\t\t\t\t\t\t color: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t  index: {\n\t\t\t\t\t\t\t\t  fontColor: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t  grid: {\n\t\t\t\t\t\t\t\t color: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  \n\t\t\t\t\t  }\n\t\t\t  \n          }}\n        />\n\t\t\t  <Bar\n\t\t\t\t  data={data2}\n\t\t\t\t\n\t\t\t\t  options={{\n\t\t\t\t\t  plugins: {\n\t\t\t\t\t\t  title: {\n\t\t\t\t\t\t\t  display: true,\n\t\t\t\t\t\t\t  text: 'Number of expenses per day',\n\t\t\t\t\t\t\t  fontSize: 20,\n\t\t\t\t\t\t\t  fontWeight: 'bold',\n\t\t\t\t\t\t  },\n\t\t\t\t\t\t  legend: {\n\t\t\t\t\t\t\t  display: true,\n\t\t\t\t\t\t\t  position: 'right',\n\t\t\t\t\t\t  },\n\t\t\t\t\t  },\n\t\t\t\t\t  scales: {\n\t\t\t\t\t\t  y: {\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t  ticks: {\n\t\t\t\t\t\t\t\t  color: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t  index: {\n\t\t\t\t\t\t\t\t  fontColor: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t  grid: {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t color: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t  },\n\t\t\t\t\t\t   x: {\n\t\t\t\t\t\t\t  ticks: {\n\t\t\t\t\t\t\t\t color: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t  index: {\n\t\t\t\t\t\t\t\t  fontColor: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t\t\t  grid: {\n\t\t\t\t\t\t\t\t color: context.theme===\"Dark\"?\"white\":\"black\"\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  \n\t\t\t\t\t  }\n\t\t\t\t  }\n\t\t  }\n        />\n      </div>\n      <Typography variant=\"h6\">\n        Total Amount Spent:{response.totalAmount}$\n      </Typography>\n      <Typography variant=\"h6\">\n        Total No of Expense:{response.totalExpenses}\n      </Typography>\n      <Typography variant=\"h6\">\n        Average Amount Per Day:{response.averageAmountPerDay}$\n      </Typography>\n      <Typography variant=\"h6\">\n        Average Amount Per Expense:{response.averageAmountPerExpense}$\n      </Typography>\n    </div>\n  )\n}\n\nexport default Report\n"],"names":["reportDataProcessing","data","SetResponse","setChartLabel","setChartData","setExpensesByDate","label","value","value1","key","amountByDate","push","sort","forEach","val","numberOfExpensesByDays","ChartJS","ArcElement","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","useState","chartLabel","chartData","expensesByDate","response","customDate","useRef","data1","labels","datasets","backgroundColor","borderColor","borderWidth","data2","range","setRange","start","setStart","end","setEnd","generateCustomReport","startDate","Number","endDate","dateFormatter","generateReportForCustomRange","then","json","context","useContext","ExpenseThemeContext","FormControl","sx","width","InputLabel","id","Select","labelId","onChange","event","target","current","style","display","MenuItem","Button","variant","onClick","generateReport","className","theme","ref","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","console","log","renderInput","params","TextField","height","flexDirection","options","plugins","title","text","fontSize","fontWeight","legend","position","scales","y","ticks","color","index","fontColor","grid","x","Typography","totalAmount","totalExpenses","averageAmountPerDay","averageAmountPerExpense"],"sourceRoot":""}